setwd("C:/Users/diehl/Desktop/Research/Survey F20/EMCP20/EMCP20_/Data")
#wd AND Data
setwd("C:/Users/diehl/Desktop/Research/Survey F20/EMCP20/EMCP20_/Data")
load("C:/Users/diehl/Desktop/Research/Survey F20/EMCP20/EMCP20_/Data/EMCP20_coded.Rdata")
setwd("C:/Users/diehl/Desktop/Research/Papers/Emmotional Engagement")
table(d1$pid)
table(d$pid)
d1 = d
#News Literacy
table(d1$nml)
hist(d1$nml)
rm(d1)
#News Literacy
table(d$nml)
hist(d$nml)
#News Literacy
table(d$nml.1)
#News Literacy
table(d$nm2)
#News Literacy
table(d$nm.2)
#News Literacy
table(d$nml.2)
#News Literacy
table(d$nml.3)
#Emotions
table(d$storyemo.joy)
hist(d$storyemo.joy)
hist(d$storyemo.enth)
table(d$storyemo.ang)
hist(d$storyemo.ang)
hist(d$storyemo.fear)
table(d$storyemo.fear)
hist(d$storyemo.neg)
hist(d$storyemo.neg)
hist(d$storyemo.pos)
table(d$storyemo.pos)
hist(d$storyemo.pos)
table(d$storyemo.neg)
hist(d$storyemo.neg)
#Discussion
table(d$dis)
hist(d$dis)
hist(talkdiv.sim)
hist(d$talkdiv.sim)
#Incidental Exp (syntax from the MB INE paper)
d$pol = d$sminc - 1 #social media political information; making "never" = 0
d$iny = d$smincexp2 - 1 #incidentality; making "never" = 0
d$ipe = sqrt(d$pol*d$iny)
d$recall = d$story.aware #recall of embedded story (state)
d$incexp = abs(d$story.purp - 1) #incidentally exposed to story (no skips)
#Basic regression models
d$weights
#Basic regression models
library(lme4)
library(lmerTest)
#network size vars
d$size = log(d$sm.ns) #network size, logged
d$div = d$sm.div.occ #network diversity, sociostructural
lm1 = lmer(ipe ~ age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm1 = lmer(ipe ~ age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
d$size = log(d$sm.ns) #network size, logged
d$div = d$sm.div.occ #network diversity, sociostructural
#Basic regression models
library(lme4)
library(lmerTest)
lm1 = lmer(ipe ~ age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm1 = lmer(ipe ~ age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm1 = lmer(ipe ~ nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
summary(lm1)
lm1 = lmer(incexp ~ nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
summary(lm1)
lm1 = lmer(incexp ~ nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm2 = lmer(storyemo.ang ~ incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm3 = lmer(storyemo.fear ~ incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm4 = lmer(talkdiv.dif ~ storyemo.fear + storyemo.ang + incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm5 = lmer(polpart ~ talkdiv.dif + storyemo.fear + storyemo.ang + incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
summary(lm1)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
summary(lm5)
summary(lm1)
lm2 = lmer(storyemo.ang ~ incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
summary(lm2)
summary(lm3)
summary(lm4)
summary(lm5)
#Tables (takes a minute when computing odds ratios)
tab_model(m1, m2, m3, m4, m5, show.ci = FALSE, show.intercept = FALSE, auto.label = FALSE)
#tools for html tables and plotting models
#see: http://www.strengejacke.de/sjPlot/index.html
library(sjPlot)
library(sjmisc)
library(sjlabelled)
#Tables (takes a minute when computing odds ratios)
tab_model(m1, m2, m3, m4, m5, show.ci = FALSE, show.intercept = FALSE, auto.label = FALSE)
#Tables (takes a minute when computing odds ratios)
tab_model(lm1, lm2, lm3, lm4, lm5, show.ci = FALSE, show.intercept = FALSE, auto.label = FALSE)
lm1 = lmer(incexp ~ nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm2 = lmer(storyemo.pos ~ incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm3 = lmer(storyemo.neg ~ incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm4 = lmer(talkdiv.dif ~ storyemo.pos + storyemo.neg + incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lm5 = lmer(polpart ~ talkdiv.dif + storyemo.neg + storyemo.neg + incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
#Tables (takes a minute when computing odds ratios)
tab_model(lm1, lm2, lm3, lm4, lm5, show.ci = FALSE, show.intercept = FALSE, auto.label = FALSE)
lm5 = lmer(polpart ~ talkdiv.dif + storyemo.pos + storyemo.neg + incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
#Tables (takes a minute when computing odds ratios)
tab_model(lm1, lm2, lm3, lm4, lm5, show.ci = FALSE, show.intercept = FALSE, auto.label = FALSE)
lm5 = lmer(talkdiv.sim ~ talkdiv.dif + storyemo.pos + storyemo.neg + incexp + nml + age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div +
(1 | frame),
data=d, weights=weights,
control=lmerControl(optimizer="bobyqa"))
#Tables (takes a minute when computing odds ratios)
tab_model(lm1, lm2, lm3, lm4, lm5, show.ci = FALSE, show.intercept = FALSE, auto.label = FALSE)
