#Test interaction between frequency and incidentality
wm1i = glm(incexp.sk ~ pol*inc +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d, family = binomial)
summary(wm1i)
exp(coef(wm1i))
summary(d$pol)
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and Load Data
setwd("~/Documents/GitHub/linkage/INE")
load("EMCP20_coded.Rdata")
#Exposure and Incidentality:
#trait-like variables
d$news = d$smnews #social media news
d$pol = d$sminc - 1 #social media political information; making "never" = 0
d$inc = d$smincexp2 - 1 #extent of incidentality; making "never" = 0
d$mot = abs(d$sm.newsintent - 1) #background motivation something other than news
d$ipe = sqrt((d$sminc-1)*(d$smincexp2-1)) #pol info by incidentality
d$ine = sqrt((d$smnews-1)*(d$smincexp2-1)) #news use by incidentality
d$recall = d$story.aware #recall of embedded story (state)
d$incexp = abs(d$story.purp - 1) #incidentally exposed to story (no skips)
d$incexp.sk = ifelse(d$recall == 1 & d$incexp == 1, 1, 0) #include skips
d$incexp.f1 = ifelse(d$recall == 1 & d$incexp == 1, "inc",
ifelse(d$recall == 1 & d$incexp == 0, "purp",
"none"))
d$incexp.f1 = factor(d$incexp.f1, levels=c("none", "inc", "purp"))
d$incexp.f2 = factor(d$incexp.f1, levels=c("inc", "none", "purp"))
#Engagement Variables
table(d$engage)
table(d$story.engage.sk)
#Individual Factors 1: Cognitive
table(d$know); hist(d$know) #trait; political knowledge
table(d$nml); hist(d$nml) #trait; news media literacy
table(d$story.mult.sk); hist(d$story.mult.sk) #state: multiple exposures (proxy for cognitive load/ prior knowledge)
with(d, ltm::cronbach.alpha(cbind(curfact.self,
curfact.orgs,
curfact.frnd,
curfact.hist,
curfact.popu), na.rm=TRUE))
d$sml = with(d, rowMeans(cbind(curfact.self,
curfact.orgs,
curfact.frnd,
curfact.hist,
curfact.popu), na.rm=TRUE))
table(d$sml); hist(d$sml) #trait: social media news literacy
#Individual Factors 2: Identity/Demographics
table(d$age) #trait; age
table(d$female) #trait; gender
table(d$poc) #trait; race
table(d$edu) #trait; ses
table(d$inc) #trait; ses
table(d$ideo) #trait; ideology
table(d$pid) #trait; partisanship
d$ideo.ext = abs(d$ideo) #trait; ideological extremity
d$pid.str = abs(d$pid) #trait; strength of partisanship
table(d$eff.int); hist(d$eff.int) #trait: internal efficacy
d$storypart = d$storypart - 6
d$storypart.ext = abs(d$storypart)
table(d$storypart); hist(d$storypart) #state; perceived ideology of story
table(d$storypart.ext); hist(d$storypart.ext) #state; perceived ideological extremity of story
table(d$storycandeval); hist(d$storycandeval) #state; issue salience
#Environmental Perceptions
table(d$sm.newsintent) #trait
table(d$story.purp.sk) #state
#Motivation
table(d$int); hist(d$int) #trait: interest
table(d$smfollow); hist(d$smfollow) #trait: follow for news
table(d$avoid); hist(d$avoid) #trait; avoid news
d$cong <- NA
d$cong = ifelse(d$story.part == 1 & d$ideo > 0, 1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo < 0, 1, d$cong)
d$cong = ifelse(d$ideo == 0, 0, d$cong)
d$cong = ifelse(d$story.part == 1 & d$ideo < 0, -1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo > 0, -1, d$cong)
table(d$cong) #state: congruence of exposure
table(d$storyemo.pos); hist(d$storyemo.pos) #state: perceived emotionality positive
table(d$storyemo.neg); hist(d$storyemo.neg) #state: perceived emotionality negative
with(d, ltm::cronbach.alpha(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE))
d$storyemo = with(d, rowMeans(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE))
table(d$storyemo); hist(d$storyemo) #state: perceived emotionality
#Social Networks
table(d$sm.ns); hist(d$sm.ns) #trait; network size
table(d$sm.div.occ); hist(d$sm.div.occ) #trait: network diversity structural
table(d$sm.div.tie); hist(d$sm.div.tie) #trait: network diversity perceptual
table(d$grp); hist(d$grp) #trait: group membership
table(d$smcur); hist(d$smcur) #state: active curation
d$curatoreval.sk <- NA
d$curatoreval.sk <- ifelse(d$story.aware == 1, d$curatoreval, d$curatoreval.sk)
d$curatoreval.sk <- ifelse(d$story.aware == 0, 50, d$curatoreval.sk)
table(d$curatoreval.sk); hist(d$curatoreval.sk) #state: curator eval
#Media Systems
#engagement #state
#sentiment #state
#salience #state
d$alg[d$alg==2] <- 1
table(d$alg) #trait; algorithmic interest
table(d$int.freq); hist(d$int.freq) #trait: internet frequency
table(d$sm.freq); hist(d$sm.freq) #trait: social media frequency
wm1 = glm(incexp.sk ~ pol + inc +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d, family = binomial)
sqrt(car::vif(wm1))
summary(wm1)
exp(coef(wm1))
par(mfrow=c(1,2))
visreg::visreg(wm1, "pol", scale="response", ylim=c(0,1))
visreg::visreg(wm1, "inc", scale="response", ylim=c(0,1))
#Test interaction between frequency and incidentality
wm1i = glm(incexp.sk ~ pol*inc +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d, family = binomial)
summary(wm1i)
par(mfrow=c(1,1))
visreg::visreg(wm2, "pol", by="inc", scale="response", ylim=c(0,1))
par(mfrow=c(1,1))
visreg::visreg(wm1i, "pol", by="inc", scale="response", ylim=c(0,1))
par(mfrow=c(1,1))
visreg::visreg(wm1i, "pol", by="inc", scale="response", ylim=c(0,1))
wm2a = lm(pol ~ 1, data=d)
wm2b = lm(inc ~ 1, data=d)
wm2c = lm(ipe ~ 1, data=d)
summary(wm2a)
summary(wm2b)
summary(wm2c)
wm2a = lm(pol ~ inc +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
wm2b = lm(inc ~ pol +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
wm2c = lm(ipe ~
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
summary(wm2b)
sqrt(car::vif(wm2a))
sqrt(car::vif(wm2b))
rm(wm2b)
wm2b = lm(inc ~ pol +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and Load Data
setwd("~/Documents/GitHub/linkage/INE")
load("EMCP20_coded.Rdata")
#Exposure and Incidentality:
#trait-like variables
d$news = d$smnews #social media news
d$pol = d$sminc - 1 #social media political information; making "never" = 0
d$iny = d$smincexp2 - 1 #extent of incidentality; making "never" = 0
d$mot = abs(d$sm.newsintent - 1) #background motivation something other than news
d$ipe = sqrt((d$sminc-1)*(d$smincexp2-1)) #pol info by incidentality
d$ine = sqrt((d$smnews-1)*(d$smincexp2-1)) #news use by incidentality
d$recall = d$story.aware #recall of embedded story (state)
d$incexp = abs(d$story.purp - 1) #incidentally exposed to story (no skips)
d$incexp.sk = ifelse(d$recall == 1 & d$incexp == 1, 1, 0) #include skips
d$incexp.f1 = ifelse(d$recall == 1 & d$incexp == 1, "inc",
ifelse(d$recall == 1 & d$incexp == 0, "purp",
"none"))
d$incexp.f1 = factor(d$incexp.f1, levels=c("none", "inc", "purp"))
d$incexp.f2 = factor(d$incexp.f1, levels=c("inc", "none", "purp"))
#Engagement Variables
table(d$engage)
table(d$story.engage.sk)
#Individual Factors 1: Cognitive
table(d$know); hist(d$know) #trait; political knowledge
table(d$nml); hist(d$nml) #trait; news media literacy
table(d$story.mult.sk); hist(d$story.mult.sk) #state: multiple exposures (proxy for cognitive load/ prior knowledge)
with(d, ltm::cronbach.alpha(cbind(curfact.self,
curfact.orgs,
curfact.frnd,
curfact.hist,
curfact.popu), na.rm=TRUE))
d$sml = with(d, rowMeans(cbind(curfact.self,
curfact.orgs,
curfact.frnd,
curfact.hist,
curfact.popu), na.rm=TRUE))
table(d$sml); hist(d$sml) #trait: social media news literacy
#Individual Factors 2: Identity/Demographics
table(d$age) #trait; age
table(d$female) #trait; gender
table(d$poc) #trait; race
table(d$edu) #trait; ses
table(d$inc) #trait; ses
table(d$ideo) #trait; ideology
table(d$pid) #trait; partisanship
d$ideo.ext = abs(d$ideo) #trait; ideological extremity
d$pid.str = abs(d$pid) #trait; strength of partisanship
table(d$eff.int); hist(d$eff.int) #trait: internal efficacy
d$storypart = d$storypart - 6
d$storypart.ext = abs(d$storypart)
table(d$storypart); hist(d$storypart) #state; perceived ideology of story
table(d$storypart.ext); hist(d$storypart.ext) #state; perceived ideological extremity of story
table(d$storycandeval); hist(d$storycandeval) #state; issue salience
#Environmental Perceptions
table(d$sm.newsintent) #trait
table(d$story.purp.sk) #state
#Motivation
table(d$int); hist(d$int) #trait: interest
table(d$smfollow); hist(d$smfollow) #trait: follow for news
table(d$avoid); hist(d$avoid) #trait; avoid news
d$cong <- NA
d$cong = ifelse(d$story.part == 1 & d$ideo > 0, 1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo < 0, 1, d$cong)
d$cong = ifelse(d$ideo == 0, 0, d$cong)
d$cong = ifelse(d$story.part == 1 & d$ideo < 0, -1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo > 0, -1, d$cong)
table(d$cong) #state: congruence of exposure
table(d$storyemo.pos); hist(d$storyemo.pos) #state: perceived emotionality positive
table(d$storyemo.neg); hist(d$storyemo.neg) #state: perceived emotionality negative
with(d, ltm::cronbach.alpha(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE))
d$storyemo = with(d, rowMeans(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE))
table(d$storyemo); hist(d$storyemo) #state: perceived emotionality
#Social Networks
table(d$sm.ns); hist(d$sm.ns) #trait; network size
table(d$sm.div.occ); hist(d$sm.div.occ) #trait: network diversity structural
table(d$sm.div.tie); hist(d$sm.div.tie) #trait: network diversity perceptual
table(d$grp); hist(d$grp) #trait: group membership
table(d$smcur); hist(d$smcur) #state: active curation
d$curatoreval.sk <- NA
d$curatoreval.sk <- ifelse(d$story.aware == 1, d$curatoreval, d$curatoreval.sk)
d$curatoreval.sk <- ifelse(d$story.aware == 0, 50, d$curatoreval.sk)
table(d$curatoreval.sk); hist(d$curatoreval.sk) #state: curator eval
#Media Systems
#engagement #state
#sentiment #state
#salience #state
d$alg[d$alg==2] <- 1
table(d$alg) #trait; algorithmic interest
table(d$int.freq); hist(d$int.freq) #trait: internet frequency
table(d$sm.freq); hist(d$sm.freq) #trait: social media frequency
wm1 = glm(incexp.sk ~ pol + iny +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d, family = binomial)
sqrt(car::vif(wm1))
summary(wm1)
exp(coef(wm1))
par(mfrow=c(1,2))
visreg::visreg(wm1, "pol", scale="response", ylim=c(0,1))
visreg::visreg(wm1, "inc", scale="response", ylim=c(0,1))
par(mfrow=c(1,2))
visreg::visreg(wm1, "pol", scale="response", ylim=c(0,1))
visreg::visreg(wm1, "iny", scale="response", ylim=c(0,1))
wm1i = glm(incexp.sk ~ pol*iny +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d, family = binomial)
summary(wm1i)
par(mfrow=c(1,1))
visreg::visreg(wm1i, "pol", by="inc", scale="response", ylim=c(0,1))
par(mfrow=c(1,1))
visreg::visreg(wm1i, "pol", by="iny", scale="response", ylim=c(0,1))
wm2a = lm(pol ~ iny +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
wm2b = lm(iny ~ pol +
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
wm2c = lm(ipe ~
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
sqrt(car::vif(wm2a))
sqrt(car::vif(wm2a)) > 2
sqrt(car::vif(wm2b)) > 2
sqrt(car::vif(wm2c)) > 2
summary(wm2a)
summary(wm2b)
wm2a = lm(pol ~
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
wm2b = lm(iny ~
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
wm2c = lm(ipe ~
know + nml + eff.int +
age + female + poc + edu + inc + ideo.ext + pid.str +
sm.newsintent +
int + smfollow + avoid +
sm.ns + sm.div.occ + grp + smcur +
sm.freq + alg,
data=d)
summary(wm2a)
summary(wm2b)
summary(wm2c)
summary(wm2a)
summary(wm1)
summary(wm2a)
summary(wm2b)
summary(wm2c)
wm1 = glm(incexp.sk ~ pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=d, family = binomial)
sqrt(car::vif(wm1))
summary(wm1)
wm1 = glm(incexp.sk ~ pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=d, family = binomial)
summary(wm1)
exp(coef(wm1))
par(mfrow=c(1,2))
visreg::visreg(wm1, "pol", scale="response", ylim=c(0,1))
visreg::visreg(wm1, "iny", scale="response", ylim=c(0,1))
#Test interaction between frequency and incidentality
wm1i = glm(incexp.sk ~ pol*iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=d, family = binomial)
summary(wm1i)
exp(coef(wm1i))
par(mfrow=c(1,1))
visreg::visreg(wm1i, "pol", by="iny", scale="response", ylim=c(0,1))
table(d$incexp.sk)
summary(wm2c)
table(d$story.engage)
summary(d$story.engage)
2008-1152
summary(d$story.aware)
table(d$story.aware)
table(d$story.engage.sk)
w3 = lm(story.engage ~ 1, data=subset(d, story.aware == 1))
rm(w3)
summary(wm3)
wm3 = lm(story.engage ~ 1, data=subset(d, story.aware == 1))
summary(wm3)
nrows(subset(d, story.aware == 1))
length(subset(d, story.aware == 1))
wm3 = lm(story.engage ~ incexp + story.mult +
cong + storypart.ext +
storycandeval + storyemo +
curatoreval +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
summary(wm3)
sqrt(car::vif(wm3))
summary(wm3)
wm3 = lm(story.engage ~ incexp + story.mult +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
sqrt(car::vif(wm3))
summary(wm3)
wm3a = lm(story.engage ~ incexp +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
sqrt(car::vif(wm3a))
summary(wm3a)
wm3a = lm(story.engage ~ incexp +
ipe +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
sqrt(car::vif(wm3a))
summary(wm3a)
wm3a = lm(story.engage ~ incexp +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
sqrt(car::vif(wm3a))
summary(wm3a)
table(d$incexp)
wm3b = lm(story.engage ~
story.mult +
cong + storypart.ext +
storycandeval + storyemo +
curatoreval +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, incexp == 1))
sqrt(car::vif(wm3b))
sqrt(car::vif(wm3b)) > 2
summary(wm3b)
library(mediation)
summary(wm3b)
hist(d$storyemo)
hist(d$storycandeval)
med.fit1 <- lm(storycandeval ~ story.mult + storyemo +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, incexp == 1))
med.fit2 <- lm(storyemo ~ story.mult + storycandeval +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, incexp == 1))
out.fit <- glm(story.engage ~ storycandeval + storyemo + story.mult +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, incexp == 1))
med.out1 <- mediate(med.fit1, out.fit, treat = "story.mult", mediator = "storycandeval",
robustSE = TRUE, sims = 1000)
med.out2 <- mediate(med.fit2, out.fit, treat = "story.mult", mediator = "storyemo",
robustSE = TRUE, sims = 1000)
summary(med.out1)
summary(med.out2)
wm3i1 = lm(story.engage ~ incexp*story.mult +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
wm3i2 = lm(story.engage ~ incexp*storycandeval +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
wm3i3 = lm(story.engage ~ incexp*storyemo +
pol + iny +
know + sm.newsintent + avoid +
age + female + poc + edu + inc,
data=subset(d, story.aware == 1))
summary(wm3i1)
summary(wm3i2)
summary(wm3i3)
visreg::visreg(wm3i3, "storyemo", by="incexp")
visreg::visreg(wm3i2, "storycandeval", by="incexp")
visreg::visreg(wm3i3, "storyemo", by="incexp")
visreg::visreg(wm3i1, "story.mult", by="incexp")
