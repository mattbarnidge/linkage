group_by(frame) %>%
mutate(ideo.c = ideo-mean(ideo))
x <- x %>%
group_by(frame) %>%
mutate(pid.c = pid-mean(pid))
am = lmer(nsmnews ~ inv +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
summary(am, cor=FALSE)
options(scipen=9999999)
summary(am, cor=FALSE)
summary(am, cor=FALSE)
1.86+.57
1.86+1.46
1.86+1.98
x <- x %>%
group_by(frame) %>%
mutate(sm.freq.c = sm.freq-mean(sm.freq))
x <- x %>%
group_by(frame) %>%
mutate(size.c = size-mean(size))
x <- x %>%
group_by(frame) %>%
mutate(div.c = div-mean(div))
x <- x %>%
group_by(frame) %>%
mutate(grp.c = grp-mean(grp))
lm1 = lmer(ipe ~ inv +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lg1 = glmer(incexp.sk ~ inv +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
lm2 = lmer(pol ~ inv +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lg2 = glmer(recall ~ inv +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(lm1, cor=FALSE)
1.15+.62
1.15+.36
summary(lg1, cor=FALSE)
exp(-2.07)
exp(0.68)
1.97+.13
exp(0.78)
2.18+.13
summary(lg1, cor=FALSE)
exp(0.40)
1.49+.13
exp(-2.07)
exp(-2.06+.68)
exp(-2.06+.78)
exp(-2.06+.40)
summary(lm2, cor=FALSE)
1.12+.79
1.12+1.22
1.12+1.59
summary(lg2, cor=FALSE)
exp(-1.73)
exp(-1.73+0.75)
exp(-1.73+1.18)
exp(-1.73+1.17)
x$incexp = as.factor(x$incexp)
x <- x %>%
group_by(frame) %>%
mutate(ipe.c = ipe-mean(ipe))
lg3 = lmer(story.engage ~ inv*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
lg4 = lmer(story.engage.he ~ inv*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(lg3, cor=FALSE)
4.11-.40
4.11-.40+1.17
4.11-2.67
4.11+.11
4.11+.11+1.23
4.11+.87
4.11+.87+.95
summary(lg4, cor=FALSE)
1.77-1.37
1.77-.09
1.77-.09+.44
1.77+.18
1.77+.18.41
1.77+.18+.41
1.77+.67
1.77+.67+.20
x$incexp <- factor(x$incexp,
levels = c(0,1),
labels = c("Purp.", "Inc."))
lg3.v = lmer(story.engage ~ inv*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg4.v = lmer(story.engage.he ~ inv*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
par(mfrow=c(1,1))
visreg::visreg(lg3.v, "inv", by="incexp", jitter=TRUE, line=list(col="black"),
ylab="Engagement", xlab="News Attraction")
visreg::visreg(lg4.v, "inv", by="incexp", jitter=TRUE, line=list(col="black"),
ylab="High-Effort Engagement", xlab="News Attraction")
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and load data
setwd("~/Documents/GitHub/linkage/INE")
load("ine.Rdata")
#Correlations among indicators of involvement (.34 < r < .72)
with(x, round(cor(cbind(mot, int, fol, alg, cur),
use="complete.obs"), digits=2))
#Recode variables for LCA (LCA requires non-zero integers)
x$x1 = x$mot + 1
x$x2 = round(x$int, digits = 0)
x$x3 = round(x$fol, digits = 0)
x$x4 = round(x$cur, digits = 0)
x$x5 = x$alg + 1
#Define LCA function
f <- cbind(x1, x2, x3, x4, x5) ~ 1
#Load Library for LCA
library(poLCA)
#Write function to find best fitting model
#min = 2 classes, max = 5 classes (trouble with convergence above 5)
min_bic <- 100000
for(i in 2:5){
lc <- poLCA(f, x, nclass=i,
maxiter=3000, tol=1e-5,
na.rm=FALSE, nrep=10,
verbose=TRUE, calc.se=TRUE)
if(lc$bic < min_bic){
min_bic <- lc$bic
LCA_best_model <- lc
}
}
#Print results (3-class model is best, according to BIC)
print(LCA_best_model)
lc <- poLCA(f, x, nclass=4,
maxiter=3000, tol=1e-5,
na.rm=TRUE,  nrep=10,
verbose=TRUE, calc.se=TRUE,
graph=TRUE) #initial model
probs.start <- poLCA.reorder(lc$probs.start,
order(lc$P, decreasing=TRUE)) #create object for order
lc <- poLCA(f, x, nclass = 4,
maxiter=3000, tol=1e-5,
na.rm=TRUE, nrep=10,
verbose=TRUE, calc.se=TRUE,
probs.start = probs.start,
graph=TRUE) #refit model with order object (probs.start)
#Clean up environment
rm(f,
i,
min_bic,
LCA_best_model,
probs.start)
detach("package:poLCA", unload=TRUE)
#Extract grouping variable and add to dataset
x$inv = as.factor(lc$predclass)
levels(x$inv) = c("Mod Unmot", "Low", "Mod Mot", "High")
x$inv <- factor(x$inv, levels = c("Low", "Mod Unmot", "Mod Mot", "High"))
table(x$inv)
#Load Libraries
library(lme4)
library(lmerTest)
#Center Controls
x <- x %>%
group_by(frame) %>%
mutate(age.c = age-mean(age))
x <- x %>%
group_by(frame) %>%
mutate(female.c = female-mean(female))
x <- x %>%
group_by(frame) %>%
mutate(poc.c = poc-mean(poc))
x <- x %>%
group_by(frame) %>%
mutate(edu.c = edu-mean(edu))
x <- x %>%
group_by(frame) %>%
mutate(inc.c = inc-mean(inc))
x <- x %>%
group_by(frame) %>%
mutate(ideo.c = ideo-mean(ideo))
x <- x %>%
group_by(frame) %>%
mutate(pid.c = pid-mean(pid))
#More centering
x <- x %>%
group_by(frame) %>%
mutate(sm.freq.c = sm.freq-mean(sm.freq))
x <- x %>%
group_by(frame) %>%
mutate(size.c = size-mean(size))
x <- x %>%
group_by(frame) %>%
mutate(div.c = div-mean(div))
x <- x %>%
group_by(frame) %>%
mutate(grp.c = grp-mean(grp))
x$incexp = as.factor(x$incexp)
#More centering
x <- x %>%
group_by(frame) %>%
mutate(ipe.c = ipe-mean(ipe))
lg3 = lmer(story.engage ~ inv*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
lg4 = lmer(story.engage.he ~ inv*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(lg3, cor=FALSE)
summary(lg3, cor=FALSE); logLik(lg3); performance::r2(lg3); performance::icc(lg3)
summary(lg4, cor=FALSE); logLik(lg4); performance::r2(lg4); performance::icc(lg4)
3.71-1.44
2.64-1.77
2.12-1.77
2.44-.40
1.68-.4
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and load data
setwd("~/Documents/GitHub/linkage/INE")
load("ine.Rdata")
#Correlations among indicators of involvement (.34 < r < .72)
with(x, round(cor(cbind(mot, int, fol, alg, cur),
use="complete.obs"), digits=2))
#Recode variables for LCA (LCA requires non-zero integers)
x$x1 = x$mot + 1
x$x2 = round(x$int, digits = 0)
x$x3 = round(x$fol, digits = 0)
x$x4 = round(x$cur, digits = 0)
x$x5 = x$alg + 1
#Define LCA function
f <- cbind(x1, x2, x3, x4, x5) ~ 1
#Load Library for LCA
library(poLCA)
#Write function to find best fitting model
#min = 2 classes, max = 5 classes (trouble with convergence above 5)
min_bic <- 100000
for(i in 2:5){
lc <- poLCA(f, x, nclass=i,
maxiter=3000, tol=1e-5,
na.rm=FALSE, nrep=10,
verbose=TRUE, calc.se=TRUE)
if(lc$bic < min_bic){
min_bic <- lc$bic
LCA_best_model <- lc
}
}
#Print results (3-class model is best, according to BIC)
print(LCA_best_model)
lc <- poLCA(f, x, nclass=4,
maxiter=3000, tol=1e-5,
na.rm=TRUE,  nrep=10,
verbose=TRUE, calc.se=TRUE,
graph=TRUE)
probs.start <- poLCA.reorder(lc$probs.start,
order(lc$P, decreasing=TRUE)) #create object for order
lc <- poLCA(f, x, nclass = 4,
maxiter=3000, tol=1e-5,
na.rm=TRUE, nrep=10,
verbose=TRUE, calc.se=TRUE,
probs.start = probs.start,
graph=TRUE)
lc$probs
lcmodel <- reshape2::melt(lc$probs, level=2)
lcmodel
names(lcmodel)
lcmodel$L2
lcmodel$Var1
class(lcmodel$Var1)
levels(lcmodel$Var1) = c("Mod Unmot", "Low", "Mod Mot", "High")
lcmodel$Var1 <- factor(lcmodel$Var1, levels = c("Low", "Mod Unmot", "Mod Mot", "High"))
lcmodel$L1[lcmodel$L2=="x1"] <- "Perception"
lcmodel$L1[lcmodel$L2=="x2"] <- "Interest"
lcmodel$L1[lcmodel$L2=="x3"] <- "Follows"
lcmodel$L1[lcmodel$L2=="x4"] <- "Curation"
lcmodel$L1[lcmodel$L2=="x5"] <- "Algorithm"
library(ggplot2)
zp1 <- ggplot(lcmodel, aes(x = L1, y = value, fill = Var2))
zp1 <- zp1 + geom_bar(stat = "identity", position = "stack")
zp1 <- zp1 + facet_grid(Var1 ~ .)
zp1
zp1 <- zp1 + scale_fill_manual(values = c("#FFFFFF", "#F5F5F5", "#ECECEC",
"#E2E2E2", "#D8D8D8", "#CECECE",
"#C1C1C1", "#B7B7B7", "#AEAEAE",
"#A1A1A1", "#949494", "#8D8D8D",
"#868686", "#7F7F7F", "#757575",
"#6C6C6C", "#646464", "#5B5B5B",
"#515151")) + theme_bw()
zp1 <- zp1 + labs(x = "Criterion Variable", y="Estimated Probability", fill ="Scale Category")
zp1 <- zp1 + theme( axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y=element_blank())
zp1 <- zp1 + guides(fill = guide_legend(reverse=TRUE))
zp1
rm(zp1)
zp1 <- ggplot(lcmodel, aes(x = L1, y = value, fill = Var2))
zp1 <- zp1 + geom_bar(stat = "identity", position = "stack")
zp1 <- zp1 + facet_grid(Var1 ~ .)
zp1 <- zp1 + scale_fill_manual(values = c("#FFFFFF", "#F5F5F5", "#ECECEC",
"#E2E2E2", "#D8D8D8", "#CECECE",
"#C1C1C1", "#B7B7B7", "#AEAEAE",
"#A1A1A1", "#949494", "#8D8D8D",
"#868686", "#7F7F7F", "#757575",
"#6C6C6C", "#646464", "#5B5B5B",
"#515151")) + theme_bw()
zp1 <- zp1 + labs(x = "Criterion Variable", y="Estimated Probability", fill ="Scale Category")
zp1 <- zp1 + theme( axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y=element_blank())
zp1
zp1 <- ggplot(lcmodel, aes(x = L1, y = value, fill = Var2))
zp1 <- zp1 + geom_bar(stat = "identity", position = "stack")
zp1 <- zp1 + facet_grid(Var1 ~ .)
#zp1 <- zp1 + scale_fill_manual(values = c("#FFFFFF", "#F5F5F5", "#ECECEC",
#                                          "#E2E2E2", "#D8D8D8", "#CECECE",
#                                          "#C1C1C1", "#B7B7B7", "#AEAEAE",
#                                          "#A1A1A1", "#949494", "#8D8D8D",
#                                          "#868686", "#7F7F7F", "#757575",
#                                          "#6C6C6C", "#646464", "#5B5B5B",
#                                          "#515151")) + theme_bw()
zp1 <- zp1 + labs(x = "Criterion Variable", y="Estimated Probability", fill ="Scale Category")
zp1 <- zp1 + theme( axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y=element_blank())
#zp1 <- zp1 + scale_x_discrete(labels=c("consp.n" = "Conspiracy \nBelief",
#                                       "fbel.n" = "False \nBelief",
#                                       "know.n" = "Knowledge"))
#zp1 <- zp1 + guides(fill = guide_legend(reverse=TRUE))
#zp1 <- zp1 + theme(legend.position = "none")
#Visualize
zp1
zp1 <- ggplot(lcmodel, aes(x = L1, y = value, fill = Var2))
zp1 <- zp1 + geom_bar(stat = "identity", position = "stack")
zp1 <- zp1 + facet_grid(Var1 ~ .)
zp1 <- zp1 + scale_fill_grey()
zp1 <- zp1 + labs(x = "Criterion Variable", y="Estimated Probability", fill ="Scale Category")
zp1 <- zp1 + theme( axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y=element_blank())
zp1
zp1 <- zp1 + guides(fill = guide_legend(reverse=TRUE))
zp1
zp1 <- ggplot(lcmodel, aes(x = L1, y = value, fill = Var2))
zp1 <- zp1 + geom_bar(stat = "identity", position = "stack")
zp1 <- zp1 + facet_grid(Var1 ~ .)
zp1 <- zp1 + scale_fill_grey()
#zp1 <- zp1 + scale_fill_manual(values = c("#FFFFFF", "#F5F5F5", "#ECECEC",
#                                          "#E2E2E2", "#D8D8D8", "#CECECE",
#                                          "#C1C1C1", "#B7B7B7", "#AEAEAE",
#                                          "#A1A1A1", "#949494", "#8D8D8D",
#                                          "#868686", "#7F7F7F", "#757575",
#                                          "#6C6C6C", "#646464", "#5B5B5B",
#                                          "#515151")) + theme_bw()
zp1 <- zp1 + labs(x = "Criterion Variable", y="Estimated Probability", fill ="Scale Category")
zp1 <- zp1 + theme( axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y=element_blank())
#zp1 <- zp1 + scale_x_discrete(labels=c("consp.n" = "Conspiracy \nBelief",
#                                       "fbel.n" = "False \nBelief",
#                                       "know.n" = "Knowledge"))
#zp1 <- zp1 + guides(fill = guide_legend(reverse=TRUE))
#zp1 <- zp1 + theme(legend.position = "none")
#Visualize
zp1
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and load data
setwd("~/Documents/GitHub/linkage/INE")
load("ine.Rdata")
#Load Libraries
library(lme4)
library(lmerTest)
#Center Controls
x <- x %>%
group_by(frame) %>%
mutate(age.c = age-mean(age))
x <- x %>%
group_by(frame) %>%
mutate(female.c = female-mean(female))
x <- x %>%
group_by(frame) %>%
mutate(poc.c = poc-mean(poc))
x <- x %>%
group_by(frame) %>%
mutate(edu.c = edu-mean(edu))
x <- x %>%
group_by(frame) %>%
mutate(inc.c = inc-mean(inc))
x <- x %>%
group_by(frame) %>%
mutate(ideo.c = ideo-mean(ideo))
x <- x %>%
group_by(frame) %>%
mutate(pid.c = pid-mean(pid))
#More centering
x <- x %>%
group_by(frame) %>%
mutate(sm.freq.c = sm.freq-mean(sm.freq))
x <- x %>%
group_by(frame) %>%
mutate(size.c = size-mean(size))
x <- x %>%
group_by(frame) %>%
mutate(div.c = div-mean(div))
x <- x %>%
group_by(frame) %>%
mutate(grp.c = grp-mean(grp))
#DV: Incidental exposure
lm1 = lmer(ipe ~ int +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lg1 = glmer(incexp.sk ~ int +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
#DV: Overall/story exposure
lm2 = lmer(pol ~ int +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
lg2 = glmer(recall ~ int +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(lm1, cor=FALSE)
options(scipen=999999)
summary(lm1, cor=FALSE)
summary(lg1, cor=FALSE)
summary(lm2, cor=FALSE)
summary(lg2, cor=FALSE)
#Recode incexp variable (state) to be factor (for visualization)
x$incexp = as.factor(x$incexp)
#More centering
x <- x %>%
group_by(frame) %>%
mutate(ipe.c = ipe-mean(ipe))
lg3 = lmer(story.engage ~ int*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
lg4 = lmer(story.engage.he ~ int*incexp +
age.c + female.c + poc.c + edu.c + inc.c + ideo.c + pid.c +
sm.freq.c + size.c + div.c + grp.c + ipe.c +
(1 | frame),
data=subset(x, recall==1),
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(lg3, cor=FALSE)
summary(lg4, cor=FALSE)
visreg::visreg(lg3, "int", by="incexp", jitter=TRUE, line=list(col="black"),
ylab="Engagement", xlab="Interest")
visreg::visreg(lg4, "int", by="incexp", jitter=TRUE, line=list(col="black"),
ylab="High-Effort Engagement", xlab="Interess")
