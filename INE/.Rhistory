x[,21:29] <- mice::complete(t2, 1)
rm(t1, t2)
x <- na.omit(x)
#Create some additional variables (didn't want these in multiple imputation)
x$incexp.sk = ifelse(x$recall == 1 & x$incexp == 1, 1, 0) #include skips
x$incexp.f1 = ifelse(x$recall == 1 & x$incexp == 1, "inc",
ifelse(x$recall == 1 & x$incexp == 0, "purp",
"none"))
x$incexp.f1 = factor(x$incexp.f1, levels=c("none", "inc", "purp"))
x$incexp.f2 = factor(x$incexp.f1, levels=c("inc", "none", "purp"))
#RQ1: Are the uninvolved more likely to report incidental exposure?
#RQ2: Is incidental exposure related to engagement among the uninvolved?
#Correlations among indicators of involvement
with(x, round(cor(cbind(mot, int, fol, alg), use="complete.obs"), digits=2))
#LCA based on indicators of involvement
#Fix variables
x$x1 = x$mot + 1
x$x2 = round(x$int, digits = 0)
x$x3 = round(x$fol, digits = 0)
x$x4 = x$alg + 1
#Define function
f <- cbind(x1, x2, x3, x4) ~ 1
#Determine Best Model
library(poLCA)
max_II <- -100000
min_bic <- 100000
for(i in 2:5){
lc <- poLCA(f, x, nclass=i, maxiter=3000, tol=1e-5, na.rm=FALSE,  nrep=10, verbose=TRUE, calc.se=TRUE)
if(lc$bic < min_bic){
min_bic <- lc$bic
LCA_best_model <- lc
}
}
print(LCA_best_model)
rm(LCA_best_model, i, max_II, min_bic)
#Estimate Model, Fix Order, Re-Estimate Model
lc <- poLCA(f, x, nclass=3, maxiter=3000, tol=1e-5, na.rm=TRUE,  nrep=10, verbose=TRUE, calc.se=TRUE, graph=TRUE)
probs.start <- poLCA.reorder(lc$probs.start, order(lc$P, decreasing=TRUE))
lc <- poLCA(f, x, nclass = 3, maxiter=3000, tol=1e-5, na.rm=TRUE, nrep=10, verbose=TRUE, calc.se=TRUE, probs.start = probs.start, graph=TRUE)
rm(probs.start, f)
#Extract Grouping Variable
x$inv = as.factor(lc$predclass)
#Fit models
lg1 = glmer(recall ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg2 = glmer(incexp.sk ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#x$incexp = as.factor(x$incexp)
lg3 = glmer(story.engage ~ incexp.f1*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=subset(x, recall==1), family=poisson, weights=weights,
nAGQ=0, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg1 = glmer(recall ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg2 = glmer(incexp.sk ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#x$incexp = as.factor(x$incexp)
lg3 = glmer(story.engage ~ incexp.f1*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
nAGQ=0, control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lg3)
par(mfrow=c(1,1))
visreg::visreg(lg3, "incexp.f1", by="inv", ylab="Engagement", xlab="Incidental Exposure")
visreg::visreg(lg3, "incexp.f1", by="inv", ylab="Engagement", xlab="Exposure Type")
table(x$story.engage)
lg3 = lmer(story.engage ~ incexp.f1*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg3 = lmer(story.engage ~ incexp.f1*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lg3)
summary(lg3)
lg3 = lmer(story.engage ~ inv*incexp.f1 +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lg3)
visreg::visreg(lg3, "incexp.f1", by="inv", ylab="Engagement", xlab="Exposure Type")
visreg::visreg(lg3, "incexp.f1", by="inv", ylab="Engagement", xlab="Exposure Type")
x$incexp = as.factor(x$incexp)
lg3 = lmer(story.engage ~ inv*incexp +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=subset(x, recall==1), weights=weights,
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lg3)
par(mfrow=c(1,1))
visreg::visreg(lg3, "incexp.f1", by="inv", ylab="Engagement", xlab="Exposure Type")
par(mfrow=c(1,1))
visreg::visreg(lg3, "incexp", by="inv", ylab="Engagement", xlab="Exposure Type")
table(x$story.engage, x$incexp)
76+48+11+13
775+297+152+93+76+48+11+13
table(x$recall)
with(subset(x, recall==1), table(story.engage, incexp))
63+30+11+13
117/(117+76+94+84+51)
117/797
prop.test(x=117,n=797)
94+84+51+63+30+11+13
346/797
with(subset(x, recall==1), margin.table(story.engage, incexp))
with(subset(x, recall==1), prop.table(story.engage, incexp))
with(subset(x, recall==1), margin.table(cbind(story.engage, incexp), margin=2))
tab <- with(subset(x, recall==1), table(story.engage, incexp))
margin.table(tab, margin=1)
margin.table(tab)
margin.table(tab, margin=2)
prop.table(tab, margin=2)
prop.table(tab)
prop.table(tab, 1)
prop.table(tab, 2)
marginSums(tab, 2)
marginSums(tab, 2)
margin.table(tab, 2)
margin.table(tab, 1)
tab
422-76
346/422
346/797
3462008
346/2008
117/422
117/797
117/2008
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and Load Data
setwd("~/Documents/GitHub/linkage/INE")
load("EMCP20_coded.Rdata")
#Exposure and Incidentality:
d$pol = d$sminc - 1 #social media political information; making "never" = 0
d$iny = d$smincexp2 - 1 #incidentality; making "never" = 0
d$ipe = sqrt(d$pol*d$iny)
d$recall = d$story.aware #recall of embedded story (state)
d$incexp = abs(d$story.purp - 1) #incidentally exposed to story (no skips)
#Engagement
table(d$engage)
table(d$story.engage)
#Control Variables
summary(d$age)
summary(d$female)
summary(d$poc)
summary(d$edu)
summary(d$inc)
summary(d$ideo)
summary(d$pid)
summary(d$sm.freq)
#Interests and Involvement
d$mot = d$sm.newsintent #social media as news source
summary(d$int) #interest
d$fol = d$smfollow #following accounts for news
d$alg[d$alg==2] <- 1 #algorithmic categorization
#Social Networks
d$size = log(d$sm.ns) #network size, logged
d$div = d$sm.div.occ #network diversity, sociostructural
d$grp = log(d$grp) #social media groups, logged
d$cur = d$smcur #social curation
#Rolling Covariates
table(d$story.mult) #multiple exposures
d$cong <- NA
d$cong = ifelse(d$story.part == 1 & d$ideo > 0, 1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo < 0, 1, d$cong)
d$cong = ifelse(d$ideo == 0, 0, d$cong)
d$cong = ifelse(d$story.part == 1 & d$ideo < 0, -1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo > 0, -1, d$cong) #ideological congruence
d$storypart = abs(d$storypart - 6) #perceived partisanship (extremity)
table(d$storycandeval) #relevance for evaluating candidates
with(d, ltm::cronbach.alpha(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE))
d$storyemo = with(d, rowMeans(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE)) #emotional response
table(d$curatoreval) #evaluation of curator
#Select Variables
x <- d %>% select(pol, iny, ipe, engage,
age, female, poc, edu, inc, ideo, pid, sm.freq,
mot, int, fol, alg,
size, div, grp, cur,
recall, incexp, story.engage,
story.mult, cong, storypart,
storycandeval, storyemo, curatoreval,
frame, weights)
#Multiple Imputation
t1 <- mice::mice(x[,1:20], m=1, maxit=50, meth='pmm', seed=500)
t2 <- mice::mice(x[,21:29], m=1, maxit=50, meth='pmm', seed=500)
x[,1:20] <- mice::complete(t1, 1)
x[,21:29] <- mice::complete(t2, 1)
rm(t1, t2)
x <- na.omit(x)
#Create some additional variables (didn't want these in multiple imputation)
x$incexp.sk = ifelse(x$recall == 1 & x$incexp == 1, 1, 0) #include skips
x$incexp.f1 = ifelse(x$recall == 1 & x$incexp == 1, "inc",
ifelse(x$recall == 1 & x$incexp == 0, "purp",
"none"))
x$incexp.f1 = factor(x$incexp.f1, levels=c("none", "inc", "purp"))
x$incexp.f2 = factor(x$incexp.f1, levels=c("inc", "none", "purp"))
#RQ1: Are the uninvolved more likely to report incidental exposure?
#RQ2: Is incidental exposure related to engagement among the uninvolved?
#Correlations among indicators of involvement
with(x, round(cor(cbind(mot, int, fol, alg), use="complete.obs"), digits=2))
#LCA based on indicators of involvement
#Fix variables
x$x1 = x$mot + 1
x$x2 = round(x$int, digits = 0)
x$x3 = round(x$fol, digits = 0)
x$x4 = x$alg + 1
#Define function
f <- cbind(x1, x2, x3, x4) ~ 1
#Determine Best Model
library(poLCA)
max_II <- -100000
min_bic <- 100000
for(i in 2:5){
lc <- poLCA(f, x, nclass=i, maxiter=3000, tol=1e-5, na.rm=FALSE,  nrep=10, verbose=TRUE, calc.se=TRUE)
if(lc$bic < min_bic){
min_bic <- lc$bic
LCA_best_model <- lc
}
}
print(LCA_best_model)
rm(LCA_best_model, i, max_II, min_bic)
#Estimate Model, Fix Order, Re-Estimate Model
lc <- poLCA(f, x, nclass=3, maxiter=3000, tol=1e-5, na.rm=TRUE,  nrep=10, verbose=TRUE, calc.se=TRUE, graph=TRUE)
probs.start <- poLCA.reorder(lc$probs.start, order(lc$P, decreasing=TRUE))
lc <- poLCA(f, x, nclass = 3, maxiter=3000, tol=1e-5, na.rm=TRUE, nrep=10, verbose=TRUE, calc.se=TRUE, probs.start = probs.start, graph=TRUE)
rm(probs.start, f)
#Extract Grouping Variable
x$inv = as.factor(lc$predclass)
#Trait-like DV
#Fit models
mlm1 = lmer(pol ~ inv + iny +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
mlm2 = lmer(ipe ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
mlm3 = lmer(engage ~ ipe*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
summary(mlm1, cor=FALSE)
summary(mlm2, cor=FALSE)
summary(mlm3, cor=FALSE)
par(mfrow=c(1,2))
visreg::visreg(mlm1, "inv", ylab="Total Exposure", xlab="Involvement")
visreg::visreg(mlm2, "inv", ylab="Incidental Exposure", xlab="Involvement")
par(mfrow=c(1,1))
visreg::visreg(mlm3, "ipe", by = "inv", ylab="Engagement", xlab="Involvement")
#State-like DVs
#Fit models
lg1 = glmer(recall ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg2 = glmer(incexp.sk ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
x$incexp = as.factor(x$incexp)
lg3 = lmer(story.engage ~ inv*incexp +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=subset(x, recall==1), weights=weights,
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(lg1)
summary(lg2)
summary(lg3)
par(mfrow=c(1,2))
visreg::visreg(lg1, "inv", ylab="Exposure", xlab="Involvement")
visreg::visreg(lg2, "inv", ylab="Incidental Exposure", xlab="Involvement")
par(mfrow=c(1,1))
visreg::visreg(lg3, "incexp", by="inv", ylab="Engagement", xlab="Exposure Type")
#Breakdown
tab <- with(subset(x, recall==1), table(story.engage, incexp))
margin.table(tab, 1)
#Some Engagement
#81% of people incidentally exposed
#43% of people exposed
#17% of sample
#High Engagement
#28% of people incidentally exposed
#15% of people exposed
#6% of sample
tab <- with(subset(x, recall==1), table(story.engage, incexp, inv))
tab
margin.table(tab, 2)
#Load Libraries
library(dplyr)
library(tidyr)
#Set WD and Load Data
setwd("~/Documents/GitHub/linkage/INE")
load("EMCP20_coded.Rdata")
#Exposure and Incidentality:
d$pol = d$sminc - 1 #social media political information; making "never" = 0
d$iny = d$smincexp2 - 1 #incidentality; making "never" = 0
d$ipe = sqrt(d$pol*d$iny)
d$recall = d$story.aware #recall of embedded story (state)
d$incexp = abs(d$story.purp - 1) #incidentally exposed to story (no skips)
#Engagement
table(d$engage)
table(d$story.engage)
#Control Variables
summary(d$age)
summary(d$female)
summary(d$poc)
summary(d$edu)
summary(d$inc)
summary(d$ideo)
summary(d$pid)
summary(d$sm.freq)
#Interests and Involvement
d$mot = d$sm.newsintent #social media as news source
summary(d$int) #interest
d$fol = d$smfollow #following accounts for news
d$alg[d$alg==2] <- 1 #algorithmic categorization
#Social Networks
d$size = log(d$sm.ns) #network size, logged
d$div = d$sm.div.occ #network diversity, sociostructural
d$grp = log(d$grp) #social media groups, logged
d$cur = d$smcur #social curation
#Rolling Covariates
table(d$story.mult) #multiple exposures
d$cong <- NA
d$cong = ifelse(d$story.part == 1 & d$ideo > 0, 1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo < 0, 1, d$cong)
d$cong = ifelse(d$ideo == 0, 0, d$cong)
d$cong = ifelse(d$story.part == 1 & d$ideo < 0, -1, d$cong)
d$cong = ifelse(d$story.part == 0 & d$ideo > 0, -1, d$cong) #ideological congruence
d$storypart = abs(d$storypart - 6) #perceived partisanship (extremity)
table(d$storycandeval) #relevance for evaluating candidates
with(d, ltm::cronbach.alpha(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE))
d$storyemo = with(d, rowMeans(cbind(storyemo.joy,
storyemo.enth,
storyemo.ang,
storyemo.fear), na.rm=TRUE)) #emotional response
table(d$curatoreval) #evaluation of curator
#Select Variables
x <- d %>% select(pol, iny, ipe, engage,
age, female, poc, edu, inc, ideo, pid, sm.freq,
mot, int, fol, alg,
size, div, grp, cur,
recall, incexp, story.engage,
story.mult, cong, storypart,
storycandeval, storyemo, curatoreval,
frame, weights)
#Multiple Imputation
t1 <- mice::mice(x[,1:20], m=1, maxit=50, meth='pmm', seed=500)
t2 <- mice::mice(x[,21:29], m=1, maxit=50, meth='pmm', seed=500)
x[,1:20] <- mice::complete(t1, 1)
x[,21:29] <- mice::complete(t2, 1)
rm(t1, t2)
x <- na.omit(x)
#Create some additional variables (didn't want these in multiple imputation)
x$incexp.sk = ifelse(x$recall == 1 & x$incexp == 1, 1, 0) #include skips
x$incexp.f1 = ifelse(x$recall == 1 & x$incexp == 1, "inc",
ifelse(x$recall == 1 & x$incexp == 0, "purp",
"none"))
x$incexp.f1 = factor(x$incexp.f1, levels=c("none", "inc", "purp"))
x$incexp.f2 = factor(x$incexp.f1, levels=c("inc", "none", "purp"))
#RQ1: Are the uninvolved more likely to report incidental exposure?
#RQ2: Is incidental exposure related to engagement among the uninvolved?
#Correlations among indicators of involvement
with(x, round(cor(cbind(mot, int, fol, alg), use="complete.obs"), digits=2))
#LCA based on indicators of involvement
#Fix variables
x$x1 = x$mot + 1
x$x2 = round(x$int, digits = 0)
x$x3 = round(x$fol, digits = 0)
x$x4 = x$alg + 1
#Define function
f <- cbind(x1, x2, x3, x4) ~ 1
#Determine Best Model
library(poLCA)
max_II <- -100000
min_bic <- 100000
for(i in 2:5){
lc <- poLCA(f, x, nclass=i, maxiter=3000, tol=1e-5, na.rm=FALSE,  nrep=10, verbose=TRUE, calc.se=TRUE)
if(lc$bic < min_bic){
min_bic <- lc$bic
LCA_best_model <- lc
}
}
print(LCA_best_model)
rm(LCA_best_model, i, max_II, min_bic)
#Estimate Model, Fix Order, Re-Estimate Model
lc <- poLCA(f, x, nclass=3, maxiter=3000, tol=1e-5, na.rm=TRUE,  nrep=10, verbose=TRUE, calc.se=TRUE, graph=TRUE)
probs.start <- poLCA.reorder(lc$probs.start, order(lc$P, decreasing=TRUE))
lc <- poLCA(f, x, nclass = 3, maxiter=3000, tol=1e-5, na.rm=TRUE, nrep=10, verbose=TRUE, calc.se=TRUE, probs.start = probs.start, graph=TRUE)
rm(probs.start, f)
#Extract Grouping Variable
x$inv = as.factor(lc$predclass)
#Fit models
mlm1 = lmer(pol ~ inv + iny +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
mlm2 = lmer(ipe ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
mlm3 = lmer(engage ~ ipe*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
library(lme4)
mlm1 = lmer(pol ~ inv + iny +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
mlm2 = lmer(ipe ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
mlm3 = lmer(engage ~ ipe*inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur +
(1 | frame),
data=x, weights=weights,
control=lmerControl(optimizer="bobyqa"))
par(mfrow=c(1,2))
visreg::visreg(mlm1, "inv", ylab="Total Exposure", xlab="Involvement")
visreg::visreg(mlm2, "inv", ylab="Incidental Exposure", xlab="Involvement")
par(mfrow=c(1,1))
visreg::visreg(mlm3, "ipe", by = "inv", ylab="Engagement", xlab="Involvement")
lg1 = glmer(recall ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
lg2 = glmer(incexp.sk ~ inv +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=x, family=poisson, weights=weights,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
x$incexp = as.factor(x$incexp)
lg3 = lmer(story.engage ~ inv*incexp +
age + female + poc + edu + inc + ideo + pid +
sm.freq + size + div + grp + cur + ipe +
(1 | frame),
data=subset(x, recall==1), weights=weights,
control=lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
par(mfrow=c(1,2))
visreg::visreg(lg1, "inv", ylab="Exposure", xlab="Involvement")
visreg::visreg(lg2, "inv", ylab="Incidental Exposure", xlab="Involvement")
par(mfrow=c(1,1))
visreg::visreg(lg3, "incexp", by="inv", ylab="Engagement", xlab="Exposure Type")
tab <- with(subset(x, recall==1), table(story.engage, incexp, inv))
print(tab)
