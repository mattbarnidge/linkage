.names = "{col}.c"))
corstars <-function(x, method=c("pearson", "spearman"), removeTriangle=c("upper", "lower"),
result=c("none", "html", "latex")){
#Compute correlation matrix
require(Hmisc)
x <- as.matrix(x)
correlation_matrix<-rcorr(x, type=method[1])
R <- correlation_matrix$r # Matrix of correlation coefficients
p <- correlation_matrix$P # Matrix of p-value
## Define notions for significance levels; spacing is important.
mystars <- ifelse(p < .0001, "****", ifelse(p < .001, "***", ifelse(p < .01, "**", ifelse(p < .05, "*", ifelse(p < .10, "#", "    ")))))
## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
## remove upper triangle of correlation matrix
if(removeTriangle[1]=="upper"){
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove lower triangle of correlation matrix
else if(removeTriangle[1]=="lower"){
Rnew <- as.matrix(Rnew)
Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove last column and return the correlation matrix
Rnew <- cbind(Rnew[1:length(Rnew)-1])
if (result[1]=="none") return(Rnew)
else{
if(result[1]=="html") print(xtable(Rnew), type="html")
else print(xtable(Rnew), type="latex")
}
}
View(d2)
names(d2[,1])
#need to create new vars from text factor for niche membership
df2 <- reshape2::dcast(d2, ResponseId + niche ~ niche, value.var = "niche")
#need to create new vars from text factor for niche membership
df %>% cbind(model.matrix(~ niche + 0, .)*1)
#need to create new vars from text factor for niche membership
d2 %>% cbind(model.matrix(~ niche + 0, .)*1)
d2 %>% mutate(
niche = as.character(niche),
niche = ifelse(is.na(niche), "none", niche),
a = as.factor(niche)
)
d2 %>% mutate(
niche = as.character(niche),
niche = ifelse(is.na(niche), "None", niche),
a = as.factor(niche)
)
d2$niche %>% mutate(
niche = as.character(niche),
niche = ifelse(is.na(niche), "None", niche),
a = as.factor(niche)
)
#need to create new vars from text factor for niche membership
d2$niche = as.character(d2$niche)
d2$niche = ifelse(is.na(d2$niche), "none", d2$niche)
d2$niche = as.factor(d2$niche)
#now create membership vars
d2 %>% cbind(model.matrix(~ niche + 0, .)*1)
#now create membership vars
model.matrix(~ niche + 0, .)*1)
d2 %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d2niche %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d2$niche %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
#now create membership vars
d3 = d2[ , c(1:3)]
View(d3)
#now create membership vars
d3 = d2[ , c(1,32)]
View(d3)
d3$niche %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d3$niche %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d3 %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d2 %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
#now create membership vars
d3 = d2[ ,32)]
#now create membership vars
d3 = d2[ ,32]
d3 %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
cbind(d2, d3)
d2 %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d2 = d2 %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
View(d2)
View(d2)
names(d2)
View(d2)
d = d2[ , c(7:13,30,32-36)]
d = d2[ , c(7:13,30,32:36)]
#Clear the environment
rm(list = ls())
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d = d2[ , c(7:13,30,32:36)]
View(d)
View(d2)
View(d2)
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
#filter out vars
d2$ine = sqrt(d2$sminc*d2$smincexp2)
d = d2[ , c(7:13,30,32:37)]
rm(d2)
View(d)
View(d)
d = d2[ , c(7:13,37,30,32:36)]
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
#filter out vars
d2$ine = sqrt(d2$sminc*d2$smincexp2)
d = d2[ , c(7:13,37,30,32:36)]
rm(d2)
View(d)
View(d)
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2)
d = d2[ , c(7:12,37,30,32:36)] #filter out vars
rm(d2)
View(d)
d2$ine = sqrt(d2$sminc*d2$smincexp2)
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2)
d = d2[ , c(7:13,37,30,32:36)] #filter out vars
rm(d2)
View(d)
d <- d %>%
group_by(frame) %>%
mutate(across(age:ideo,
~(as.numeric(scale(., scale=FALSE))),
.names = "{col}.c"))
View(d)
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2)
d = d2[ , c(7:13,37,30,32:36)] #filter out vars
rm(d2)
d <- d %>%
group_by(frame) %>%
mutate(across(age:ideo,
~(as.numeric(scale(., scale=FALSE))),
.names = "{col}.c"))
#need to create new variables from the niche factor variable
d2$niche = as.character(d2$niche) #this is easier to convert type and change NAs
View(d)
#need to create new variables from the niche factor variable
d$niche = as.character(d$niche) #this is easier to convert type and change NAs
d$niche = ifelse(is.na(d$niche), "none", d2$niche) #change NAs
d$niche = as.factor(d$niche) #back to factor
d = d %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
names(d[,22:25])
d[,22:25]) #check
d[,22:25] #check
View(d)
View(d)
#need to create new variables from the niche factor variable
d$niche = as.character(d$niche) #this is easier to convert type and change NAs
d$niche = ifelse(is.na(d$niche), "none", d2$niche) #change NAs
d$niche = ifelse(is.na(d$niche), "none", d$niche) #change NAs
d$niche = as.factor(d$niche) #back to factor
#now create membership vars
d = d %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
View(d)
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2)
d = d2[ , c(7:13,37,30,32:36)] #filter out vars
rm(d2)
d <- d %>%
group_by(frame) %>%
mutate(across(age:ideo,
~(as.numeric(scale(., scale=FALSE))),
.names = "{col}.c"))
#need to create new variables from the niche factor variable
d$niche = as.character(d$niche) #this is easier to convert type and change NAs
d$niche = ifelse(is.na(d$niche), "none", d$niche) #change NAs
d$niche = as.factor(d$niche) #back to factor
#now create membership vars
d = d %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d[,22:25] #check
View(d)
View(d)
d[,c(10, 23:26)] #check
corstars <-function(x, method=c("pearson", "spearman"), removeTriangle=c("upper", "lower"),
result=c("none", "html", "latex")){
#Compute correlation matrix
require(Hmisc)
x <- as.matrix(x)
correlation_matrix<-rcorr(x, type=method[1])
R <- correlation_matrix$r # Matrix of correlation coefficients
p <- correlation_matrix$P # Matrix of p-value
## Define notions for significance levels; spacing is important.
mystars <- ifelse(p < .0001, "****", ifelse(p < .001, "***", ifelse(p < .01, "**", ifelse(p < .05, "*", ifelse(p < .10, "#", "    ")))))
## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
## remove upper triangle of correlation matrix
if(removeTriangle[1]=="upper"){
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove lower triangle of correlation matrix
else if(removeTriangle[1]=="lower"){
Rnew <- as.matrix(Rnew)
Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove last column and return the correlation matrix
Rnew <- cbind(Rnew[1:length(Rnew)-1])
if (result[1]=="none") return(Rnew)
else{
if(result[1]=="html") print(xtable(Rnew), type="html")
else print(xtable(Rnew), type="latex")
}
}
##Enter the vars into the function and create the plot
names(d)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')])
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'niche_belong', 'cable', 'elite', 'local')])
corstars(d[,c('age.c', 'niche_belong', 'cable', 'elite', 'local')])
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c')])
install.packages("corrplot")
library(corrplot)
d(names)
names(d)
cor_matrix <- cor(d[,15:22, 12:14, 11, 23:25,])
cor_matrix <- cor(d[,c(15:22, 12:14, 11, 23:25)])
corrplot(cor_matrix, method = "color", type = "upper", order = "hclust", tl.cex = 0.7)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.7)
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c')])
corstars <-function(x, method=c("pearson", "spearman"), removeTriangle=c("upper", "lower"),
result=c("none", "html", "latex")){
#Compute correlation matrix
require(Hmisc)
x <- as.matrix(x)
correlation_matrix<-rcorr(x, type=method[1])
R <- correlation_matrix$r # Matrix of correlation coefficients
p <- correlation_matrix$P # Matrix of p-value
## Define notions for significance levels; spacing is important.
mystars <- ifelse(p < .0001, "***", ifelse(p < .001, "***", ifelse(p < .01, "**", ifelse(p < .05, "*", ifelse(p < .10, "#", "    ")))))
## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
## remove upper triangle of correlation matrix
if(removeTriangle[1]=="upper"){
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove lower triangle of correlation matrix
else if(removeTriangle[1]=="lower"){
Rnew <- as.matrix(Rnew)
Rnew[lower.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove last column and return the correlation matrix
Rnew <- cbind(Rnew[1:length(Rnew)-1])
if (result[1]=="none") return(Rnew)
else{
if(result[1]=="html") print(xtable(Rnew), type="html")
else print(xtable(Rnew), type="latex")
}
}
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c')])
corstars(d[,c('age.c', 'niche_belong', 'cable', 'elite', 'local')])
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c')])
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c',)])
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c')])
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type =="html")
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type ="html")
corstars(d[,c('niche_belong', 'cable', 'elite', 'local', 'age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c')])
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')])
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], result = 'html')
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], result = html)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], result = "html")
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], result = html)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], result = html)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], method = "pearson")
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], method = "pearson", result = "html")
rm(corstars)
rm(cor_matrix)
install.packages("remotes")
remotes::install_github("Cogitos/statxp")
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], method = "pearson", result = "html")
library(remotes)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], method = "pearson", result = "html")
library(Cogitos/statxp)
library("Cogitos/statxp")
remotes::install_github("Cogitos/statxp")
library(statxp)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], method = "pearson", result = "html")
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')])
?corstars
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')],result = "html")
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')],result = html)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')],method = pearson)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')],method = 'pearson')
corstars(mtcars[,1:7], result="html")
corstars(mtcars[,1:7], result="html")
library(xtable)
install.packages(xtable)
install.packages('xtable')
library(xtable)
corstars(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')])
corstars(mtcars[,1:7], result="html")
corstars(mtcars[,1:7])
devtools::install_github("neuropsychology/psycho.R")  # Install the newest version
install.packages("psycho")
install.packages("psycho")
install.packages("tidyverse")
library(psycho)
library(tidyverse)
cor <- psycho::affective %>%
correlation()
library(psycho)
library(tidyverse)
cor <- psycho::affective %>%
correlation()
install.packages("corrtable")
library(corrtable)
correlation_matrix(mtcars[,1:4], type = "pearson", digits = 2, show_signifigance = TRUE)
correlation_matrix(mtcars[,1:4], type = "pearson", digits = 2, show_significance = TRUE)
correlation_matrix(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type = "pearson", digits = 2, show_significance = TRUE)
correlation_matrix(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
correlation_matrix(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type = "pearson", digits = 2, show_significance = TRUE, use ='lower')
correlation_matrix(d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
setwd("/Users/trevordiehl/Desktop")
save_correlation_matrix(df = d[,c('age.c', 'female.c', 'poc.c', 'edu.c', 'inc.c', 'ine.c', 'int.c', 'ideo.c', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')],
filename = 'test.csv',
type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
#Clear the environment
rm(list = ls())
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2) #create the ine var
d = d2[ , c(7:13,37,30,32:36)] #filter model vars
#create dichotomous variables from the niche factor variable
d$niche = as.character(d$niche) #this is easier to convert type and change NAs
d$niche = ifelse(is.na(d$niche), "none", d$niche) #relabel NAs
d$niche = as.factor(d$niche) #back to factor
#now create membership vars
d = d %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d[,c(10, 23:26)] #check it
rm(d2)
#Clear the environment
rm(list = ls())
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2) #create the ine var
d = d2[ , c(7:13,37,30,32:36)] #filter model vars
rm(d2)
#create dichotomous variables from the niche factor variable
d$niche = as.character(d$niche) #this is easier to convert type and change NAs
d$niche = ifelse(is.na(d$niche), "none", d$niche) #relabel NAs
d$niche = as.factor(d$niche) #back to factor
#now create membership vars
d = d %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d[,c(10, 23:26)] #check it
d[,c(10, 15:18)] #check it
install.packages("corrtable")
source("~/Documents/linkage/Niche News/Journlism RR/model revisions.R", echo=TRUE)
#install.packages("corrtable")
library(corrtable)
correlation_matrix(d[,c('age', 'female', 'poc', 'edu', 'inc', 'ine', 'int', 'ideo', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
load("/Users/trevordiehl/Documents/linkage/Niche News/Data/niche_news.RData")
d2$ine = sqrt(d2$sminc*d2$smincexp2) #create the ine var
d = d2[ , c(7:13,37,30,32:36)] #filter model vars
rm(d2)
#create dichotomous variables from the niche factor variable
d$niche = as.character(d$niche) #this is easier to convert type and change NAs
d$niche = ifelse(is.na(d$niche), "none", d$niche) #relabel NAs
d$niche = as.factor(d$niche) #back to factor
#now create membership vars
d = d %>%
mutate(niche = factor(niche)) %>%
cbind(sapply(levels(.$niche), `==`, .$niche)*1)
d[,c(10, 15:18)] #check it
correlation_matrix(d[,c('age', 'female', 'poc', 'edu', 'inc', 'ine', 'int', 'ideo', 'news_avoid', 'news_counter',
'news_pro', 'niche_belong', 'cable', 'elite', 'local')], type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
setwd("/Users/trevordiehl/Desktop")
save_correlation_matrix(df = d[,c('age', 'female', 'poc', 'edu', 'inc', 'ine', 'int', 'ideo', 'news_pro', 'news_counter',
'news_avoid', 'niche_belong', 'cable', 'elite', 'local')],
filename = 'test.csv',
type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
save_correlation_matrix(df = d[,c('age', 'female', 'poc', 'edu', 'inc', 'ine', 'int', 'ideo', 'news_pro', 'news_counter',
'news_avoid', 'niche_belong', 'cable', 'elite', 'local')],
filename = 'test.txt',
type = "pearson", digits = 2, show_significance = TRUE, use ='upper')
#Set WD and Load Data
setwd("/Users/trevordiehl/Documents/linkage/Niche News")
load("niche.mi.Rdata")
load("niche.mi.sub.Rdata")
#Grand Descriptives
with(m2, mean(newsideo, na.rm=TRUE))
with(m2, var(newsideo, na.rm=TRUE))
#Group Descriptives
with(m2, aggregate(newsideo, by=list(niche), mean))
with(m2, aggregate(newsideo, by=list(niche), var))
#Create Group Means Variables
ideo.means = with(m2, aggregate(ideo, by = list(niche), mean, na.rm=TRUE))[,2]
m2$ideo.g[m2$niche == "local"] <- ideo.means[1]
m2$ideo.g[m2$niche == "elite"] <- ideo.means[2]
m2$ideo.g[m2$niche == "cable"] <- ideo.means[3]
news.means = with(m2, aggregate(newsideo, by = list(niche), mean, na.rm=TRUE))[,2]
m2$news.g[m2$niche == "local"] <- news.means[1]
m2$news.g[m2$niche == "elite"] <- news.means[2]
m2$news.g[m2$niche == "cable"] <- news.means[3]
#Clean Up Environment
rm(ideo.means, news.means)
#Group Mean Center
m2 <- m2 %>%
group_by(niche) %>%
mutate(across(ideo:ine,
~(as.numeric(scale(., scale=FALSE))),
.names = "{col}.c"))
#Change Variable Labels for Plotting
m2 <- rename(m2,
Individual = ideo.c,
Audience = ideo.g,
Organization = news.g,
Interest = int.c)
#Alternate Model Testing for R/R w/INE
#Fit Random Intercepts Models
mlm1.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
mlm2.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + Audience + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
mlm3.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + Organization + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
#Fit Interactions
mlm4.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + Audience + Individual*Audience + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
mlm5.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + Organization + Individual*Organization + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
mlm6.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + Audience + Interest*Audience + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
mlm7.1 = lmer(newsideo ~ age.c + female.c + poc.c + edu.c + inc.c + Interest + ine.c + Individual + Organization + Interest*Organization + (1 + Individual | niche:frame), data = m2, weights = weights, control = lmerControl(optimizer="Nelder_Mead"))
plot3 = visreg(mlm6.1, "Interest", by = "Audience",
overlay=TRUE, jitter=TRUE,
line=list(col=c("black", "grey")),
points=list(col=c("black", "grey")),
breaks=c(-.52, .62),
strip.names=c("Aud. Ideo. = -1 SD", "Aud. Ideo. = +1 SD"),
xlab = "Political Interest",
ylab = "Selection Valence")
plot4 = visreg(mlm7.1, "Interest", by = "Organization",
overlay=TRUE, jitter=TRUE,
line=list(col=c("black", "grey")),
points=list(col=c("black", "grey")),
breaks=c(-.35, .15),
strip.names=c("Org. Ideo. = -1 SD", "Org. Ideo. = +1 SD"),
xlab = "",
ylab = "")
summary(mlm1.1, cor=FALSE); logLik(mlm1.1)
